<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 起用注解 -->    
    <mvc:annotation-driven>
    	<!-- 处理返回值乱码 -->
 		<mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
              <constructor-arg value="UTF-8" />
            </bean>
        </mvc:message-converters>   	
    </mvc:annotation-driven>
    
    <!-- 配置例外:不是让所有的代码都走springmvc的过滤器 -->
    <!-- 配置静态资源不被dispatcherServlet处理 -->
    <mvc:resources location="/bootstrap/" mapping="/bootstrap/**" />
    <mvc:resources location="/easyui/" mapping="/easyui/**" />
    <mvc:resources location="/js/" mapping="/js/**" />
    
    <!-- 配置拦截器 -->
	 <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/custjs/**"/>			
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/img/**"/>			
			<mvc:exclude-mapping path="/font-awesome/**"/>
			<mvc:exclude-mapping path="/bootstrap-dist/**"/>
			<!-- <mvc:exclude-mapping path="/sys/**"/> -->
			<mvc:exclude-mapping path="/test/**"/>
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/doLogin"/>
			<bean class="com.stech.tcip.sys.interceptor.AccessInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
    
    
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>application/json;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->  
            </list>  
        </property>  
    </bean> 
    
    <!-- 扫描controller -->
   	<context:component-scan base-package="com.stech.tcip.*"/>
    <!-- <context:component-scan base-package="com.cloudaudit.wechat.*.controller"/> -->
    
    <!-- ervlet在找页面时，走的是dispatcherServlet路线。找不到的时候会报404
    	加上这个默认的servlet时候，servlet在找不到的时候会去找静态的内容 -->
    <mvc:default-servlet-handler/> 
    
    <!-- 配置handerAdapter  适配器 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
   
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <!-- 将视图名 渲染后视图的前缀 -->
	     <property name="prefix" value="/WEB-INF/view/"/>
	    <!-- 渲染后视图的后缀 -->
	     <property name="suffix" value=".jsp"/>
	    <!-- 例：视图名为:hello   渲染后：/WEB-INF/jsp/hello.jsp 该页面 -->
	</bean>
	
	<!-- 自定义的全局异常处理器 
	只要实现HandlerExceptionResolver接口就是全局异常处理器-->
	<bean class="com.stech.tcip.sys.exception.TcipExceptionHandler"></bean>
	
</beans>